{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-action.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","addContact","createAction","name","number","payload","id","shortid","generate","deleteContacts","changeFilter","getItems","state","contacts","items","getFilteredContacts","normalizedContacts","filter","getFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","dispatch","useDispatch","useSelector","handleInputChange","e","currentTarget","value","handleFormReset","onSubmit","preventDefault","find","alert","type","pattern","title","required","onChange","Titel","h2","List","ul","Item","li","ContactList","map","onClick","onDeleteContacts","Container","section","h1","Section","titel","children","connect","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"8MAEaA,EAAOC,IAAOC,KAAV,yIAQJC,EAAQF,IAAOG,MAAV,0BAELC,EAAQJ,IAAOK,MAAV,iEAKLC,EAASN,IAAOO,OAAV,qL,+BCdNC,EAAaC,YAAa,gBAAgB,SAACC,EAAMC,GAC5D,MAAO,CACLC,QAAS,CAAEC,GAAIC,IAAQC,WAAYL,OAAMC,cAIhCK,EAAiBP,YAAa,mBAE9BQ,EAAeR,YAAa,yBCX5BS,EAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAGnCC,EAAsB,SAAAH,GACjC,IAAMC,EAAWF,EAASC,GAEpBI,EALiB,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,OAIhCC,CAAUN,GACSO,cAKlC,OAHyBN,EAASI,QAAO,SAAAG,GAAO,OAC9CA,EAAQjB,KAAKgB,cAAcE,SAASL,O,OC4EzBM,I,gBAAAA,EA9Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOnB,EAAP,KAAeqB,EAAf,KACMC,EAAWC,cACXd,EAAWe,YAAYjB,GAEvBkB,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,cAAlB5B,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,MACd,OAAQ7B,GACN,IAAK,OACHqB,EAAQQ,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,SAqBAC,EAAkB,WACtBT,EAAQ,IACRC,EAAU,KAGZ,OACE,eAACjC,EAAD,CAAM0C,SAvBa,SAAAJ,GAOnB,GANAA,EAAEK,iBAEgBtB,EAASuB,MACzB,SAAAhB,GAAO,OAAIA,EAAQjB,KAAKgB,gBAAkBhB,EAAKgB,iBAM/C,OAFAkB,MAAM,GAAD,OAAIlC,EAAJ,iCACL8B,IAIFP,EAASzB,EAAWE,EAAMC,IAC1B6B,KASA,UACE,eAACtC,EAAD,kBAEE,cAACE,EAAD,CACEyC,KAAK,OACLnC,KAAK,OACL6B,MAAO7B,EACPoC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUb,OAGd,eAAClC,EAAD,oBAEE,cAACE,EAAD,CACEyC,KAAK,MACLnC,KAAK,SACL6B,MAAO5B,EACPmC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUb,OAGd,cAAC9B,EAAD,CAAQuC,KAAK,SAAb,8BCzEOK,EAAQlD,IAAOmD,GAAV,oDAIL7C,EAASN,IAAOO,OAAV,wOAaN6C,EAAOpD,IAAOqD,GAAV,2CAIJC,EAAOtD,IAAOuD,GAAV,8C,QCiBFC,EAhCK,WAClB,IAAMpC,EAAWe,YAAYb,GACvBW,EAAWC,cAGjB,OACE,qCACE,cAACgB,EAAD,uBACA,cAACE,EAAD,UACGhC,EAASqC,KAAI,gBAAG5C,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAAC2C,EAAD,CAAezC,GAAIA,EAAnB,UACE,cAAC,IAAD,IACA,iCAAOH,EAAP,OAFF,IAEuB,+BAAOC,IAC5B,cAAC,EAAD,CACEkC,KAAK,SACLa,QAAS,YAXI,SAAA7C,GAAMoB,EAASjB,EAAeH,IAYzC8C,CAAiB9C,IAHrB,SAME,cAAC,IAAD,QATOA,YChBR+C,EAAY5D,IAAO6D,QAAV,0BAETX,EAAQlD,IAAO8D,GAAV,mECcHC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACL,EAAD,WACE,cAAC,EAAD,UAAQI,IACPC,MCNM/D,EAAQF,IAAOG,MAAV,gDAILC,EAAQJ,IAAOK,MAAV,iHCgBH6D,eARS,SAAC,GAAD,MAAmB,CACzC3B,MADsB,EAAGnB,SACTI,WAGS,SAAAS,GAAQ,MAAK,CACtCgB,SAAU,SAAAZ,GAAC,OAAIJ,EAAShB,EAAaoB,EAAEC,cAAcC,YAGxC2B,EAjBA,SAAC,GAAyB,IAAvB3B,EAAsB,EAAtBA,MAAOU,EAAe,EAAfA,SACvB,OACE,eAAC,EAAD,qCAEE,cAAC,EAAD,CAAOJ,KAAK,OAAON,MAAOA,EAAOU,SAAUA,UCJlC,SAASkB,IACtB,OACE,mCACE,eAAC,EAAD,CAASH,MAAM,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,S,4BCPF3C,GAAQ+C,YACZ,CACE,CAAEvD,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eALvB,mBAQtBH,GAAa,SAACW,EAAD,OAAUP,EAAV,EAAUA,QAAV,4BAA4BO,GAA5B,CAAmCP,OAR1B,cAStBI,GAAiB,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OAChBO,EAAMK,QAAO,qBAAGX,KAAgBD,QAVX,IAcrBY,GAAS4C,YAAc,GAAD,eACzBnD,GAAe,SAACoD,EAAD,YAAMzD,YAGT0D,eAAgB,CAC7BjD,SACAG,Y,qCCTI+C,GAAwB,CAC5BC,IAAK,WACLC,Q,QAAAA,EACAC,UAAW,CAAC,WAGRC,GAAQC,YAAe,CAC3BC,QAAS,CAAEzD,SAAU0D,aAAeP,GAAuBQ,KAC3DC,UAAUC,EACVC,WAAY,SAAAC,GAAoB,OAC9BA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,SAE3DC,OAAOC,SAGRC,GAAYC,aAAapB,I,SCxB/BqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUvB,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAawB,QAAS,6CAAuBL,UAAWA,GAAxD,SACE,cAAC3B,EAAD,UAINiC,SAASC,eAAe,W","file":"static/js/main.eece42fb.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border: solid 1px black;\n  padding: 15px;\n  width: 300px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  display: flex;\n  margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #bcb7b7;\n  }\n`;\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add', (name, number) => {\n  return {\n    payload: { id: shortid.generate(), name, number },\n  };\n});\n\nexport const deleteContacts = createAction('contacts/delete');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getItems(state);\n  const filter = getFilter(state);\n  const normalizedContacts = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContacts),\n  );\n  return filteredContacts;\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-action';\nimport { getItems } from 'redux/contacts/contacts-selectors';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (duplicate) {\n      alert(`${name} is already in contacts`);\n      handleFormReset();\n      return;\n    }\n\n    dispatch(addContact(name, number));\n    handleFormReset();\n  };\n\n  const handleFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contacts</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Titel = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Titel, Button, List, Item } from './ContactList.styled';\nimport { BsFillPersonFill, BsFillTrashFill } from 'react-icons/bs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/contacts/contacts-action';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContacts = id => dispatch(deleteContacts(id));\n  return (\n    <>\n      <Titel>Contacts</Titel>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id} id={id}>\n            <BsFillPersonFill />\n            <span>{name}:</span> <span>{number}</span>\n            <Button\n              type=\"button\"\n              onClick={() => {\n                onDeleteContacts(id);\n              }}\n            >\n              <BsFillTrashFill />\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section``;\n\nexport const Titel = styled.h1`\n  font-size: 30px;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Titel } from './Section.styled';\n\nconst Section = ({ titel, children }) => {\n  return (\n    <Container>\n      <Titel>{titel}</Titel>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  titel: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  margin-left: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\nimport { connect } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/contacts-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Filter contacts by name\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\n\nexport default function App() {\n  return (\n    <>\n      <Section titel=\"Phonebook\">\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, changeFilter, deleteContacts } from './contacts-action';\n\nconst items = createReducer(\n  [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContacts]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  },\n);\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from 'redux/contacts/contacts-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\nimport { persistor, store } from 'redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<div>Loading...</div>} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}