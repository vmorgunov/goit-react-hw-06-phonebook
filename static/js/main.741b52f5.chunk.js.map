{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-types.js","redux/contacts/contacts-action.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","types","ADD","DELETE","CHANGE_FILTER","manageContacts","addContact","name","number","type","payload","id","shortid","generate","deleteContacts","changeFilter","value","connect","contacts","items","dispatch","onSubmit","contactsAction","useState","setName","setNumber","handleInputChange","e","currentTarget","handleFormReset","preventDefault","find","contact","toLowerCase","alert","pattern","title","required","onChange","Titel","h2","List","ul","Item","li","getFilteredContacts","filter","normalizedContacts","includes","onDeleteContacts","map","onClick","Container","section","h1","Section","titel","children","App","combineReducers","state","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.741b52f5.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border: solid 1px black;\n  padding: 15px;\n  width: 300px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  display: flex;\n  margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #bcb7b7;\n  }\n`;\n","const ADD = 'contacts/add';\nconst DELETE = 'contacts/delete';\nconst CHANGE_FILTER = 'contacts/changeFilter';\n\nconst types = {\n  ADD,\n  DELETE,\n  CHANGE_FILTER,\n};\n\nexport default types;\n","import types from 'redux/contacts/contacts-types';\nimport shortid from 'shortid';\n\nconst addContact = (name, number) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContacts = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nconst manageContacts = {\n  addContact,\n  deleteContacts,\n  changeFilter,\n};\n\nexport default manageContacts;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { connect } from 'react-redux';\nimport contactsAction from 'redux/contacts/contacts-action';\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (duplicate) {\n      alert(`${name} is already in contacts`);\n      handleFormReset();\n      return;\n    }\n\n    onSubmit(name, number);\n    handleFormReset();\n  };\n\n  const handleFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contacts</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n\nconst mapStateToProps = ({ contacts }) => ({ contacts: contacts.items });\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styled from '@emotion/styled';\n\nexport const Titel = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Titel, Button, List, Item } from './ContactList.styled';\nimport { BsFillPersonFill, BsFillTrashFill } from 'react-icons/bs';\nimport { connect } from 'react-redux';\nimport contactsAction from 'redux/contacts/contacts-action';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <>\n      <Titel>Contacts</Titel>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id} id={id}>\n            <BsFillPersonFill />\n            <span>{name}:</span> <span>{number}</span>\n            <Button type=\"button\" onClick={() => onDeleteContacts(id)}>\n              <BsFillTrashFill />\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nconst getFilteredContacts = (contacts, filter) => {\n  const normalizedContacts = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContacts),\n  );\n  return filteredContacts;\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getFilteredContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContacts: id => dispatch(contactsAction.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section``;\n\nexport const Titel = styled.h1`\n  font-size: 30px;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Titel } from './Section.styled';\n\nconst Section = ({ titel, children }) => {\n  return (\n    <Container>\n      <Titel>{titel}</Titel>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  titel: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  margin-left: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\nimport { connect } from 'react-redux';\nimport contactsAction from 'redux/contacts/contacts-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <Label>\n      Filter contacts by name{' '}\n      <Input type=\"text\" value={value} onChange={onChange} />\n    </Label>\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(contactsAction.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\n\nexport default function App() {\n  return (\n    <>\n      <Section titel=\"Phonebook\">\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport types from 'redux/contacts/contacts-types';\n\nconst items = (\n  state = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ],\n  { type, payload },\n) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from 'redux/contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\nimport store from 'redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}