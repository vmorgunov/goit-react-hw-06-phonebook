{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","App.jsx","hooks/useLocalStorage.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","handleFormReset","preventDefault","find","contact","toLowerCase","alert","type","pattern","title","required","onChange","Titel","h2","List","ul","Item","li","ContactList","onDeleteContacts","map","id","onClick","Container","section","h1","Section","titel","children","Filter","filter","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","setFilter","normalizedFilter","filteredContacts","includes","shortid","generate","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.659b768b.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-left: 10px;\n  margin-bottom: 10px;\n  border: solid 1px black;\n  padding: 15px;\n  width: 300px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  display: flex;\n  margin: 10px 0;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background-color: #bcb7b7;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport default function ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicate = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (duplicate) {\n      alert(`${name} is already in contacts`);\n      handleFormReset();\n      return;\n    }\n\n    onSubmit(name, number);\n    handleFormReset();\n  };\n\n  const handleFormReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleInputChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contacts</Button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const Titel = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 15px;\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  transition: all 0.2s ease-in-out;\n\n  &:hover {\n    transform: scale(1.3);\n  }\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Titel, Button, List, Item } from './ContactList.styled';\nimport { BsFillPersonFill, BsFillTrashFill } from 'react-icons/bs';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => {\n  return (\n    <>\n      <Titel>Contacts</Titel>\n      <List>\n        {contacts.map(({ id, name, number }) => (\n          <Item key={id} id={id}>\n            <BsFillPersonFill />\n            <span>{name}:</span> <span>{number}</span>\n            <Button type=\"button\" onClick={() => onDeleteContacts(id)}>\n              <BsFillTrashFill />\n            </Button>\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section``;\n\nexport const Titel = styled.h1`\n  font-size: 30px;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Titel } from './Section.styled';\n\nconst Section = ({ titel, children }) => {\n  return (\n    <Container>\n      <Titel>{titel}</Titel>\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  titel: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  margin-left: 10px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <Label>\n      Filter contacts by name{' '}\n      <Input type=\"text\" value={filter} onChange={onChange} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport ContactForm from 'components/ContactForm';\nimport shortid from 'shortid';\nimport ContactList from 'components/ContactList';\nimport Section from 'components/Section';\nimport Filter from 'components/Filter';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  const handleFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <>\n      <Section titel=\"Phonebook\">\n        <ContactForm onSubmit={addContact} contacts={contacts} />\n        <Filter value={filter} onChange={handleFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContacts={deleteContact}\n        />\n      </Section>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(state));\n  }, [state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}